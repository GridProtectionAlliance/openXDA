@*//******************************************************************************************************
//  EmailTypes.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may
//  not use this file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  09/12/2016 - Billy Ernest
//       Generated original version of source code.
//
//*******************************************************************************************************@

@using GSF.Security
@using GSF.Web.Model
@using openXDA.Model
@using openXDA.Nodes
@using openXDA.Nodes.Types.Email

@inherits ExtendedTemplateBase<AppModel>

@{
    Layout = "Layout.cshtml";
    ViewBag.Title = "Restore Event Emails";

    SecurityPrincipal principal = ViewBag.SecurityPrincipal;
    string message = "Access denied.";
    string detail = "";

    if (principal.IsInRole("Administrator"))
    {
        Host nodeHost = ViewBag.NodeHost;

        try
        {
            message = "Restoring event emails...";

            detail = EventEmailNode
                .RestoreEventEmailsAsync(nodeHost)
                .GetAwaiter()
                .GetResult();
        }
        catch (Exception ex)
        {
            message = "Failed to restore event emails";
            detail = ex.ToString();
        }
    }
}

<br />
<p>@message</p>

@if (!string.IsNullOrEmpty(detail))
{
    <pre>@detail</pre>
}