@*******************************************************************************************************
//  Settings.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  01/15/2016 - J. Ritchie Carroll
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using System
@using System.Collections.Generic
@using System.Net.Http
@using System.Security.Policy
@using System.Threading
@using GSF.Web
@using GSF.Web.Model
@using openXDA
@using openXDA.Model
@inherits ExtendedTemplateBase<AppModel>
@section StyleSheets {
    <link rel="stylesheet" href="/Content/fullscreenselect/bootstrap-fullscreen-select.css"/>
    <style>
        html, body {
            height: 100%;
        }
    </style>
}
@{
    DataContext dataContext = ViewBag.DataContext;
    Layout = "Config/Layout.cshtml";
    ViewBag.Title = "Meter Groups";
    HttpRequestMessage request = ViewBag.Request;

    Dictionary<string, string> parameters = request.QueryParameters();

    if (parameters.ContainsKey("MeterGroupID"))
    {
        ViewBag.MeterGroupID = parameters["MeterGroupID"];
    }
    else
    {
        ViewBag.MeterGroupID = '%';
    }


    // Define column headers, use null for field name to make column non-sortable
    ViewBag.HeaderColumns = new[]
{   //    { "Field", "Label", "Classes" }
        new[] { "Name", "Name", "text-Left" },
        new[] { null, "Meters", "text-center valign-middle"},
        new[] {null, "Users", "text-center valign-middle"}

    };

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
}
@helper BodyRows()
{
    <td width="80%" class="text-left valign-middle" nowrap><button type="button" class="btn btn-link" data-bind="text: Name, click: $parent.viewPageRecord"></button></td>
    <td width="5%" class="text-center valign-middle"><button type="button" id="newWindow" data-bind="click: openMeters.bind($data), enable: $parent.dataHubIsConnected" class="btn btn-default  form-control">Meters&nbsp;&nbsp;<span class="badge" data-bind="text: getMeterCount(ID, $($element)), attr: {id: 'meterCount' + ID}">0</span></button></td>
    <td width="5%" class="text-center valign-middle"><button type="button" id="userWindow" data-bind="click: openUsers.bind($data), enable: $parent.dataHubIsConnected" class="btn btn-default  form-control">Users&nbsp;&nbsp;<span class="badge" data-bind="text: getUserCount(ID, $($element)), attr: {id: 'userCount' + ID}">0</span></button></td>
    <td width="5%" class="text-center valign-middle" nowrap>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.editPageRecord, enable: $parent.canEdit() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-pencil"></span></button>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.removePageRecord, enable: $parent.canDelete() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-remove"></span></button>
    </td>
}
@helper AddNewEditDialog(DataContext dataContext)
{
    <div>
        @Raw(dataContext.AddInputField<MeterGroup>("Name"))
    </div>
    <div data-bind="visible: $parent.recordMode()!==RecordMode.View">
        <div id="metersSelectFrame" class="form-group">
            <label>Meters:</label>
            <select id="meterSelect" class="form-control mobileSelect" multiple></select>
        </div>
        <div id="userSelectFrame" class="form-group">
            <label>Users:</label>
            <select id="userSelect" class="form-control mobileSelect" multiple></select>
        </div>

    </div>
}
<div id="metersDialog" class="modal modal-wide fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" style="overflow-y: hidden">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <iframe style="border: none; overflow-y: hidden" id="metersFrame" marginheight="0" marginwidth="0"></iframe>
                <button type="button" class="btn btn-default pull-right popup-ok-button" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<div id="usersDialog" class="modal modal-wide fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body" style="overflow-y: hidden">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <iframe style="border: none; overflow-y: hidden" id="usersFrame" marginheight="0" marginwidth="0"></iframe>
                <button type="button" class="btn btn-default pull-right popup-ok-button" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

@Html.RenderResource("GSF.Web.Model.Views.PagedViewModel.cshtml")
@section Scripts
{
    <script type="text/javascript" src="/Scripts/fullscreenselect/bootstrap-fullscreen-select.min.js"></script>
    <script>
        @Raw(dataContext.RenderViewModelConfiguration<MeterGroup, DataHub>(ViewBag))
                
        function getMeterCount(sourceID, element) {
            if (viewModel.dataHubIsConnected()) {
                dataHub.queryGroupMeterViewCount(sourceID, null).done(function (count) {
                    $(element).text(count.toString());
                });
            }

            return element.text();
        }
        
        function getUserCount(sourceID, element) {
            if (viewModel.dataHubIsConnected()) {
                dataHub.queryUserAccountMeterGroupCount(sourceID, null).done(function (count) {
                    $(element).text(count.toString());
                });
            }
            return element.text();
        }

        function openMeters(record) {
            //console.log(record);
            $("#metersFrame").attr({
                "src": "/MeterMeterGroupView.cshtml?GroupID=" + record.ID + "&Title=" + encodeURIComponent(record.Name),
                "height": ($(document).height() - 150) + "px",
                "width": "100%"
            });
            
            $("#metersDialog").modal("show");
        }
        
        function openUsers(record) {
            //console.log(record);
            $("#usersFrame").attr({
                "src": "/UserAccountMeterGroupView.cshtml?GroupID=" + record.ID + "&Title=" + encodeURIComponent(record.Name),
                "height": ($(document).height() - 150) + "px",
                "width": "100%"
            });

            $("#usersDialog").modal("show");
        }

        $("#metersDialog").on("hidden.bs.modal", function () {
            // Refresh page counts after editing tasks
            viewModel.queryPageRecords();

            // Clear frame page
            $("#metersFrame").attr("src", "about:blank");
        });
        
        $("#usersDialog").on("hidden.bs.modal", function () {
            // Refresh page counts after editing tasks
            viewModel.queryPageRecords();

            // Clear frame page
            $("#usersFrame").attr("src", "about:blank");
        });

        $(window).resize(function () {
            setTimeout(function () {
                $("#metersFrame").attr("height", ($(document).height() - 150) + "px");
            }, 500);
        });
        
        var meters;
        var users;
        $(viewModel).on('beforeSave', function (event, record) {
            meters = ($('#meterSelect').val() == null ? [] : $('#meterSelect').val());
            users = ($('#userSelect').val() == null ? [] : $('#userSelect').val());
        });
        $(viewModel).on('recordSaved', function (event, record) {
            if (viewModel.dataHubIsConnected()) {
                dataHub.getLastMeterGroupID().done(function (id) {
                    dataHub.updateMeters(meters, id);
                    dataHub.updateUsers(users, id).done(function () {
                        viewModel.queryPageRecords();
                    })
                });
            }
        });
        
        $('#addNewEditDialog').on('shown.bs.modal', function () {
            if (viewModel.dataHubIsConnected()) {
                dataHub.queryMeters(-1, "Name", true, 1, 10000000, null).done(function (meters) {
                    $('#meterSelect').children().remove();

                    $.each(meters, function (i, d) {
                        $('#meterSelect').append(new Option(d.Name, d.ID));
                    });

                    var mobileSelectOptions = {
                        padding: {
                            top: '5%',
                            left: '15%',
                            right: '15%',
                            bottom: '5%'
                        },
                        title: "<div class='right-inner-addon'><i class='glyphicon glyphicon-search'></i><input class='form-control' type='search' id='meterfilter' placeholder='Search Meters' /></div>",
                        onOpen: function () {
                            $('.mobileSelect-container :visible .mobileSelect-buttons').prepend("<a href='#' class='selectAllBtn'>Select All </a>");
                            $('.selectAllBtn').click(function () {
                                $('.mobileSelect-container :visible .list-container').children().addClass('selected');
                            });
                            
                            $('#meterfilter').on('keyup', function () {
                                var string = $('#meterfilter').val();
                                if (string === "") {
                                    $('.mobileSelect-container :visible .list-container').children().show();

                                }
                                else {
                                    $('.mobileSelect-container :visible .list-container').children().hide();
                                    $.each($('.mobileSelect-container :visible .list-container').children(), function (i, item) {
                                        if ($(item).text().indexOf($('#meterfilter').val()) >= 0)
                                            $(item).show();
                                    });
                                }
                            });
                        },
                        onClose: function () {
                            $('.selectAllBtn').remove();
                        }
                    };

                    if (viewModel.recordMode() === RecordMode.Edit) {
                        dataHub.queryGroupMeterViews(viewModel.currentRecord().ID(), "ID", true, 1, 1000000, null).done(function (metersInGroup) {

                            $.each(metersInGroup, function (i, meter) {
                                $('#meterSelect').find('option[value="' + meter.MeterID + '"]').attr('selected', true);
                            });
                            $('#meterSelect').mobileSelect(mobileSelectOptions);
                            $('#metersSelectFrame .btn-mobileSelect-gen').addClass('form-control');

                            $('#metersSelectFrame .btn-mobileSelect-gen').off('click');
                            $('#metersSelectFrame .btn-mobileSelect-gen').on('click', function (event) {
                                event.preventDefault();
                                $('#meterSelect').mobileSelect('show');
                            });

                        });
                    }
                    else {
                        $('#meterSelect').mobileSelect(mobileSelectOptions);
                        $('#metersSelectFrame .btn-mobileSelect-gen').addClass('form-control');

                        $('#metersSelectFrame .btn-mobileSelect-gen').off('click');
                        $('#metersSelectFrame .btn-mobileSelect-gen').on('click', function (event) {
                            event.preventDefault();
                            $('#meterSelect').mobileSelect('show');
                        });

                    }

                });

                securityHub.queryUserAccounts("Name", true, 1, 1000000, null).done(function (users) {
                    $('#userSelect').children().remove();

                    var mobileSelectOptions = {
                        padding: {
                            top: '5%',
                            left: '15%',
                            right: '15%',
                            bottom: '5%'
                        },
                        title: "<div class='right-inner-addon'><i class='glyphicon glyphicon-search'></i><input class='form-control' type='search' id='userfilter' placeholder='Search Users' /></div>",
                        onOpen: function () {
                            $('.mobileSelect-container :visible .mobileSelect-buttons').prepend("<a href='#' class='selectAllBtn'>Select All </a>");
                            $('.selectAllBtn').click(function () {
                                $('.mobileSelect-container :visible .list-container').children().addClass('selected');
                            });
                            
                            $('#userfilter').on('keyup', function () {
                                var string = $('#userfilter').val();
                                if (string === "") {
                                    $('.mobileSelect-container :visible .list-container').children().show();

                                }
                                else {
                                    $('.mobileSelect-container :visible .list-container').children().hide();
                                    $.each($('.mobileSelect-container :visible .list-container').children(), function (i, item) {
                                        if ($(item).text().indexOf($('#userfilter').val()) >= 0)
                                            $(item).show();
                                    });
                                }
                            });

                        },
                        onClose: function () {
                            $('.selectAllBtn').remove();
                        }
                    };
                    
                    $.each(users, function (i, d) {
                        securityHub.sidToAccountName(d.Name).done(function (accountName) {
                            $('#userSelect').append(new Option(accountName, d.ID));
                        });
                    });

                    if (viewModel.recordMode() === RecordMode.Edit) {
                        dataHub.queryUserAccountMeterGroups(viewModel.currentRecord().ID(), "ID", true, 1, 1000000, null).done(function (usersInGroup) {
                            $.each(usersInGroup, function (i, user) {
                                $('#userSelect').find('option[value="' + user.UserAccountID + '"]').attr('selected', true);
                            });
                            $('#userSelect').mobileSelect(mobileSelectOptions);
                            $('#userSelectFrame .btn-mobileSelect-gen').addClass('form-control');

                            $('#userSelectFrame .btn-mobileSelect-gen').off('click');
                            $('#userSelectFrame .btn-mobileSelect-gen').on('click', function (event) {
                                event.preventDefault();
                                $('#userSelect').mobileSelect('refresh');
                                $('#userSelect').mobileSelect('show');
                            });


                        });
                    }
                    else {
                        $('#userSelect').mobileSelect(mobileSelectOptions);
                        $('#userSelectFrame .btn-mobileSelect-gen').addClass('form-control');

                        $('#userSelectFrame .btn-mobileSelect-gen').off('click');
                        $('#userSelectFrame .btn-mobileSelect-gen').on('click', function (event) {
                            event.preventDefault();
                            $('#userSelect').mobileSelect('refresh');
                            $('#userSelect').mobileSelect('show');
                        });
                    }
                });
            }
        });
        
        $('#addNewEditDialog').on('hidden.bs.modal', function () {
            $('#userSelect').mobileSelect('destroy');
            $('#meterSelect').mobileSelect('destroy');
        });

        $(function () {
            viewModel.filterText = '@ViewBag.MeterGroupID';
            viewModel.queryPageRecords();
            $("#metersDialog").modal({ show: false, backdrop: "static", keyboard: false });
            $("#usersDialog").modal({ show: false, backdrop: "static", keyboard: false });

        });
    </script>
}
