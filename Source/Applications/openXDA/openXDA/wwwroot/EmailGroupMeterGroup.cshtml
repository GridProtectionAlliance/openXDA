@*//******************************************************************************************************
//  EmailGroupMeterGroup.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may
//  not use this file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  09/13/2016 - Billy Ernest
//       Generated original version of source code.
//
//*******************************************************************************************************@


@using System.Collections.Generic
@using System.Net.Http
@using System.Text.RegularExpressions
@using GSF.Web
@using GSF.Web.Model
@using openXDA
@using openXDA.Model
@inherits ExtendedTemplateBase<AppModel>
@{
    DataContext dataContext = ViewBag.DataContext;
    Layout = "Layout.cshtml";
    ViewBag.Title = "Email Group - Meter Group";

    HttpRequestMessage request = ViewBag.Request;

    Dictionary<string, string> parameters = request.QueryParameters();

    if (parameters.ContainsKey("EmailGroupID"))
    {
        ViewBag.EmailGroupID = parameters["EmailGroupID"];
    }
    else
    {
        ViewBag.EmailGroupID = '%';
    }

    if (parameters.ContainsKey("MeterGroupID"))
    {
        ViewBag.MeterGroupID = parameters["MeterGroupID"];
    }
    else
    {
        ViewBag.MeterGroupID = '%';
    }

    // Define column headers, use null for field name to make column non-sortable
    ViewBag.HeaderColumns = new[]
{   //    { "Field", "Label", "Classes" }
        new[] { "EmailGroupID", "Email Group", "text-Left" },
        new[] { "MeterGroupID", "Meter Group", "text-left valign-middle"},

    };

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
    ViewBag.AddNewEditTitle = "Email Group - Meter Group";
}

@helper BodyRows()
{
    <td width="25%" class="text-left valign-middle" nowrap><a class="btn btn-link" data-bind="text: lookupEmailGroupName(EmailGroupID), attr: { href: '/EmailGroups.cshtml?GroupID=' + EmailGroupID }"></a></td>
    <td width="25%" class="text-left valign-middle" nowrap><a class="btn btn-link" data-bind="text: lookupGroupName(MeterGroupID), attr: { href: '/MeterGroups.cshtml?MeterGroupID=' + MeterGroupID }"></a></td>
    <td width="5%" class="text-center valign-middle" nowrap>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.editPageRecord, enable: $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-pencil"></span></button>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.removePageRecord, enable: $parent.canDelete() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-remove"></span></button>
    </td>
}
@helper AddNewEditDialog(DataContext dataContext)
{
    @Raw(dataContext.AddSelectField<EmailGroupMeterGroup, EmailGroup>("EmailGroupID", "ID", "Name"))
    @Raw(dataContext.AddSelectField<EmailGroupMeterGroup, openXDA.Model.Group>("MeterGroupID", "ID", "GroupName"))

}
@Html.RenderResource("GSF.Web.Model.Views.PagedViewModel.cshtml")
@section Scripts
{
    <script>
        @Raw(dataContext.RenderViewModelConfiguration<EmailGroupMeterGroup, DataHub>(ViewBag))
        @Raw(Model.RenderAbstract<EmailGroup>("Name", "ID", "lookupEmailGroupName", "emailGroupName"))
        @Raw(Model.RenderAbstract<openXDA.Model.Group>("GroupName", "ID", "lookupGroupName", "groupName"))

        $(function () {
            viewModel.filterText = '@ViewBag.EmailGroupID' + ';' + '@ViewBag.MeterGroupID';
            viewModel.queryPageRecords();
        });

    </script>
}
