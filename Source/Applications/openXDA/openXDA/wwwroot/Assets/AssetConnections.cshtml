@*******************************************************************************************************
    //  Settings.cshtml - Gbtc
    //
    //  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
    //
    //  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
    //  the NOTICE file distributed with this work for additional information regarding copyright ownership.
    //  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
    //  file except in compliance with the License. You may obtain a copy of the License at:
    //
    //      http://opensource.org/licenses/MIT
    //
    //  Unless agreed to in writing, the subject software distributed under the License is distributed on an
    //  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
    //  License for the specific language governing permissions and limitations.
    //
    //  Code Modification History:
    //  ----------------------------------------------------------------------------------------------------
    //  01/15/2016 - J. Ritchie Carroll
    //       Generated original version of source code.
    //
    //*****************************************************************************************************@
@using System
@using System.Collections.Generic
@using System.Net.Http
@using System.Threading
@using GSF.Web
@using GSF.Web.Model
@using openXDA
@using openXDA.Model
@using openXDA.Hubs

@inherits ExtendedTemplateBase<AppModel>

@{
    DataContext dataContext = ViewBag.DataContext;
    HttpRequestMessage request = ViewBag.Request;
    Dictionary<string, string> parameters = request.QueryParameters();

    ViewBag.assetID = int.Parse(parameters["AssetID"] ?? "-1");

    Layout = "Assets/Layout.cshtml";

    if (ViewBag.assetID != -1)
    {
        string lineKey = dataContext.Connection.ExecuteScalar<string>("SELECT AssetKey FROM Asset WHERE ID = {0}", ViewBag.assetID);
        ViewBag.Title = "Connections of " + lineKey;
        ViewBag.CustomHeader = "Conections of <a href=\"/Assets/Asset.cshtml?Asset=" + lineKey + "\">" + lineKey + "</a>";

        // Define column headers, use null for field name to make column non-sortable
        ViewBag.HeaderColumns = new[]
        {   //    { "Field", "Label", "Classes" }
new[] { "ParentKey", "Asset 1", "text-left" },
new[] { "ChildKey", "Asset 2", "text-left"},
new[] { "AssetRelationshipType", "Connection Type", "text-left"},
};
    }

    ViewBag.ParentKeys = ViewBag.assetID;
    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
    ViewBag.ShowSearchFilter = true;
}
@helper BodyRows()
{
    <td width="30%" class="text-left valign-middle" nowrap><a data-bind="attr: { href: '/Assets/Asset.cshtml?Asset=' + ParentKey }" }><span data-bind="text: ParentKey" /> </a></td>

    <td width="30%" class="text-left valign-middle" nowrap><a data-bind="attr: { href: '/Assets/Asset.cshtml?Asset=' + ChildKey }" }><span data-bind="text: ChildKey" /> </a></td>
    <td width="30%" class="text-left valign-middle" data-bind="text: AssetRelationshipType"></td>
    <td width="10%" class="text-center valign-middle" nowrap>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.editPageRecord, enable: $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-pencil"></span></button>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.removePageRecord, enable: $parent.canDelete() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-remove"></span></button>
    </td>
}
@helper AddNewEditDialog(DataContext dataContext)
{
    <div class="col-md-12">
        @Raw(dataContext.AddSelectField<AssetConnection, Asset>("ParentID", "ID", "AssetKey", fieldLabel: "Asset 1"))
        @Raw(dataContext.AddSelectField<AssetConnection, Asset>("ChildID", "ID", "AssetKey", fieldLabel: "Asset 2"))
        @Raw(dataContext.AddSelectField<AssetConnection, AssetConnectionType>("AssetRelationshipTypeID", "ID", "Name", fieldLabel: "Connection Type"))
    </div>
        }

        @Html.RenderResource("GSF.Web.Model.Views.PagedViewModel.cshtml")
        @section Scripts
{
            <script src="@("/@GSF/Web/Model/Scripts/gsf.web.primeui.js")"></script>
            <script>
        @Raw(dataContext.RenderViewModelConfiguration<AssetConnection, DataHub>(ViewBag, "ID", null, ViewBag.assetID))

       

        


            </script>
        }
