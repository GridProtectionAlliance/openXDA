@*******************************************************************************************************
//  Index.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  01/15/2016 - J. Ritchie Carroll
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using System.Collections.Generic
@using System.Net.Http
@using System.Security.AccessControl
@using System.Text.RegularExpressions
@using GSF.Web
@using GSF.Web.Model
@using openXDA
@using openXDA.Model
@using openXDA.Hubs

@inherits ExtendedTemplateBase<AppModel>
@{
    DataContext dataContext = ViewBag.DataContext;

    Layout = "Workbench/Layout.cshtml";
    ViewBag.Title = "Site Summary";

    ViewBag.HeaderColumns = new[]
{   //    { "Field", "Label", "Classes" }
        new[] { "MeterID", "Meter ID", "text-left"},
        new[] { "Completeness", "Completeness", "text-center"},
        new[] { "Correctness", "Correctness", "text-center"},
        new[] { "Events", "Events" , "text-center"},
        new[] { "Disturbances", "Disturbances", "text-center"},
        new[] { "Faults", "Faults", "text-center"},
        new[] { "MaxCurrent", "Max Current", "text-center"},
        new[] { "MinVoltage", "Min Voltage", "text-center"},

    };
    ViewBag.ShowSearchFilter = true;

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
    ViewBag.defaultFilter = dataContext.Connection.ExecuteScalar<int>("SELECT ID FROM WorkbenchFilter WHERE UserID = {0} AND IsDefault = 1", DataHub.GetCurrentUserID());
    ViewBag.HideAddNewButton = true;
    ViewBag.ParentKeys = ViewBag.defaultFilter;


}

@section StyleSheets{
    <style>
    </style>
}

@helper BodyRows()
{
    <td width="30%" class="text-left valign-middle" data-bind="text: MeterID"></td>
    <td width="10%" class="text-center valign-middle" data-bind="text: Completeness.toFixed(2)"></td>
    <td width="10%" class="text-center valign-middle" data-bind="text: Correctness.toFixed(2)"></td>
    <td width="10%" class="text-center valign-middle"><a target="_blank" data-bind="attr: {href: 'EventsForMeter.cshtml?MeterID=' + MeterID + '&Filter='+ getFilter() }, text: Events"></a></td>
    <td width="10%" class="text-center valign-middle"><a target="_blank" data-bind="attr: {href: 'DisturbancesForMeter.cshtml?MeterID=' + MeterID + '&Filter='+ getFilter() }, text: Disturbances"></a></td>
    <td width="10%" class="text-center valign-middle"><a target="_blank" data-bind="attr: {href: 'FaultsForMeter.cshtml?MeterID=' + MeterID + '&Filter='+ getFilter() }, text: Faults"></a></td>
    <td width="10%" class="text-center valign-middle" data-bind="text: MaxCurrent.toFixed(2)"></td>
    <td width="10%" class="text-center valign-middle" data-bind="text: MinVoltage.toFixed(2)"></td>
}

@helper AddNewEditDialog(DataContext dataContext)
{

}
@Html.RenderResource("GSF.Web.Model.Views.PagedViewModel.cshtml")


@section Scripts {
    <script>
        @Raw(dataContext.RenderViewModelConfiguration<SiteSummary, DataHub>(ViewBag, "MeterID", null, ViewBag.defaultFilter))
        
        $('#globalFilter').change(function (event) {
            viewModel.setQueryRecordCount(function (filterText) {
                return dataHub.querySiteSummaryCount($('#globalFilter').val(), filterText);
            });

            viewModel.setQueryRecords(function (sortField, ascending, page, pageSize, filterText) {
                return dataHub.querySiteSummaries($('#globalFilter').val(), sortField, ascending, page, pageSize, filterText);
            });

            viewModel.queryPageRecords();
        });

        getFilter = function () {
            return $('#globalFilter').val()
        }
    </script>
}
