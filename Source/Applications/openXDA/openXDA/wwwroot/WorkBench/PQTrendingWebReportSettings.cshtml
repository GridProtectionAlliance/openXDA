@*//******************************************************************************************************
    //  StepChnageWebReport.cshtml - Gbtc
    //
    //  Copyright © 2018, Grid Protection Alliance.  All Rights Reserved.
    //
    //  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
    //  the NOTICE file distributed with this work for additional information regarding copyright ownership.
    //  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
    //  file except in compliance with the License. You may obtain a copy of the License at:
    //
    //      http://opensource.org/licenses/MIT
    //
    //  Unless agreed to in writing, the subject software distributed under the License is distributed on an
    //  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
    //  License for the specific language governing permissions and limitations.
    //
    //  Code Modification History:
    //  ----------------------------------------------------------------------------------------------------
    //  08/13/2018 - Billy Ernest
    //       Generated original version of source code.
    //
    //*******************************************************************************************************@

@using System.Data
@using System.Net.Http
@using GSF.Web
@using GSF.Web.Model
@using openXDA
@using openXDA.Model
@using openXDA.Hubs
@using Newtonsoft.Json

@inherits ExtendedTemplateBase<AppModel>

@{
    DataContext dataContext = ViewBag.DataContext;
    Layout = "Workbench/Layout.cshtml";
    ViewBag.Title = "PQ Trending Web Report Settings";
    DateTime toDateTime = DateTime.Now;

    // Define column headers, use null for field name to make column non-sortable
    ViewBag.HeaderColumns = new[]
    {   //    { "Field", "Label", "Classes" }
        new[] { "Name", "Display Name", "text-left"},
        new[] { "Description", "Description", "text-left"},
        new[] { "Enabled", "Enabled", "text-center"},
    };

    ViewBag.BodyRows = BodyRows().ToString();
    ViewBag.AddNewEditDialog = AddNewEditDialog(dataContext).ToString();
    ViewBag.HideAddNewButton = false;
    ViewBag.ShowSearchFilter = true;

}
@section StyleSheets {
    <style>
    </style>
}
@helper BodyRows()
{
    <td width="30%" class="text-left valign-middle" data-bind="text: Name"></td>
    <td width="57%" class="text-left valign-middle" data-bind="text: Description"></td>
    <td width="10%" class="text-center valign-middle" data-bind="text: Enabled"></td>
    <td width="3%" class="text-center valign-middle" nowrap>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.editPageRecord, enable: $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-pencil"></span></button>
        <button type="button" class="btn btn-xs" data-bind="click: $parent.removePageRecord, enable: $parent.canDelete() && $parent.dataHubIsConnected()"><span class="glyphicon glyphicon-remove"></span></button>
    </td>
}

@helper AddNewEditDialog(DataContext dataContext)
{
    @Raw(dataContext.AddInputField<PQMeasurement>("Name"))
    @Raw(dataContext.AddTextAreaField<PQMeasurement>("Description"))
    @Raw(dataContext.AddSelectField<PQMeasurement, Unit>("UnitID", "ID", "Name"))
    @Raw(dataContext.AddSelectField<PQMeasurement, MeasurementType>("MeasurementTypeID", "ID", "Name"))
    @Raw(dataContext.AddSelectField<PQMeasurement, MeasurementCharacteristic>("MeasurementCharacteristicID", "ID", "Name"))
    @Raw(dataContext.AddSelectField<PQMeasurement, Phase>("PhaseID", "ID", "Name"))
    @Raw(dataContext.AddInputField<PQMeasurement>("HarmonicGroup"))
    @Raw(dataContext.AddCheckBoxField<PQMeasurement>("Enabled"))
}
@Html.RenderResource("GSF.Web.Model.Views.PagedViewModel.cshtml")
@section Scripts
{
    <script>

        @Raw(dataContext.RenderViewModelConfiguration<PQMeasurement, DataHub>(ViewBag))
        $('#selectedText').hide()
        $('#globalFilter').hide()

    </script>
}
