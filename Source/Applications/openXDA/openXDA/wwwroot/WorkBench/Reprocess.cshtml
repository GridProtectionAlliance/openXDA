@*******************************************************************************************************
//  Index.cshtml - Gbtc
//
//  Copyright © 2016, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  01/15/2016 - J. Ritchie Carroll
//       Generated original version of source code.
//
//*****************************************************************************************************@
@using System.Collections.Generic
@using System.Net.Http
@using System.Text.RegularExpressions
@using GSF.Web
@using GSF.Web.Model
@using openXDA
@using openXDA.Model
@inherits ExtendedTemplateBase<AppModel>
@{
    DataContext dataContext = ViewBag.DataContext;
    Layout = "Workbench/Layout.cshtml";
    ViewBag.Title = "Reprocess Data";
    DateTime toDateTime = DateTime.Now;

}
<br/>
<div class="form-group">
    <label>Time Range:</label>
    <input id="dateRange" type="text" class="form-control" />
</div>
<div id="metersFrame" class="form-group">
    <label>Meters:</label>
    <select id="meters" class="form-control mobileSelect" multiple></select>
</div>
<button class="btn btn-primary" onclick="reprocess()">Reprocess</button>

<script>     
        var mobileSelectOptions = {
            padding: {
                top: '5%',
                left: '15%',
                right: '15%',
                bottom: '5%'
            },
            title: "",
            onOpen: function () {
                $('.mobileSelect-container :visible .mobileSelect-buttons').prepend("<a href='#' class='selectAllBtn'>Select All </a>");
                $('.selectAllBtn').click(function () {
                    $('.mobileSelect-container :visible .list-container').children().addClass('selected');
                });


            },
            onClose: function () {
                $('.selectAllBtn').remove();
            }
        };
        var dateRangeOptions = {
            "timePicker": true,
            "timePicker24Hour": true,
            "timePickerSeconds": true,
            "locale": {
                "format": 'MM/DD/YYYY HH:mm:ss '
            },
            "autoApply": true,
            "ranges": {
                '1 Day': [moment().utc().startOf('day'), moment().utc().endOf('day')],
                'Last 3 Days': [moment().utc().startOf('day').subtract(2, 'days'), moment().utc().endOf('day')],
                'Last 7 Days': [moment().utc().startOf('day').subtract(6, 'days'), moment().utc().endOf('day')],
                'Last 30 Days': [moment().utc().startOf('day').subtract(29, 'days'), moment().utc().endOf('day')],
                //'This Month': [moment().utc().startOf('month'), moment().utc().endOf('month')],
                //'Last Month': [moment().utc().subtract(1, 'month').startOf('month'), moment().utc().subtract(1, 'month').endOf('month')]
            },
            "startDate": moment().utc().subtract(29, 'days').startOf('day'),
            "endDate": moment.utc().endOf('day')
        };

        $(window).on('hubConnected', function () {

            dataHub.getOldestEventDateTime().done(function (data) {
                dateRangeOptions.startDate = moment(data).utc();
                $('#dateRange').daterangepicker(dateRangeOptions);
            });

            mobileSelectOptions.title = "<div class='right-inner-addon'><i class='glyphicon glyphicon-search'></i><input class='form-control' type='search' id='meterfilter' placeholder='Search Meters' /></div>";
            $('#meters').mobileSelect(mobileSelectOptions);
            $('#metersFrame .btn-mobileSelect-gen').addClass('form-control');

            $('#metersFrame .btn-mobileSelect-gen').off('click');
            $('#metersFrame .btn-mobileSelect-gen').on('click', function (event) {
                event.preventDefault();
                $('#meters').mobileSelect('show');
            });

            $('#meterfilter').on('keyup', function () {
                var string = $('#meterfilter').val();
                if (string === "") {
                    $('.mobileSelect-container :visible .list-container').children().show();

                }
                else {
                    $('.mobileSelect-container :visible .list-container').children().hide();
                    $.each($('.mobileSelect-container :visible .list-container').children(), function (i, item) {
                        if ($(item).text().toLowerCase().indexOf($('#meterfilter').val()) >= 0)
                            $(item).show();
                    });
                }
            });

            dataHub.getMetersForSelect().done(function (data) {
                $.each(data, function (index, type) {
                    $('#meters').append($(new Option(type.Name, type.ID)));
                });
                $('#meters').mobileSelect('refresh');
            });

        });
    
        function reprocess() {
            dataHub.reprocessFiles($('#meters').val(), {
                Item1: $('#dateRange').data('daterangepicker').startDate._d, Item2: $('#dateRange').data('daterangepicker').endDate._d
            });
        }
</script>

