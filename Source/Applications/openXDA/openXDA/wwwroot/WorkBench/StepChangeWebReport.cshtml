@*//******************************************************************************************************
//  StepChnageWebReport.cshtml - Gbtc
//
//  Copyright © 2018, Grid Protection Alliance.  All Rights Reserved.
//
//  Licensed to the Grid Protection Alliance (GPA) under one or more contributor license agreements. See
//  the NOTICE file distributed with this work for additional information regarding copyright ownership.
//  The GPA licenses this file to you under the MIT License (MIT), the "License"; you may not use this
//  file except in compliance with the License. You may obtain a copy of the License at:
//
//      http://opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. Refer to the
//  License for the specific language governing permissions and limitations.
//
//  Code Modification History:
//  ----------------------------------------------------------------------------------------------------
//  08/13/2018 - Billy Ernest
//       Generated original version of source code.
//
//*******************************************************************************************************@


@using System.Net.Http
@using GSF.Web
@using GSF.Web.Model
@using openXDA
@using openXDA.Model
@using openXDA.Hubs
@using Newtonsoft.Json

@inherits ExtendedTemplateBase<AppModel>

@{
    DataContext dataContext = ViewBag.DataContext;
    Layout = "Workbench/Layout.cshtml";
    ViewBag.Title = "Step Change Web Report";
    DateTime toDateTime = DateTime.Now;
    ViewBag.usePagedViewModel = false;
    ViewBag.useContainer = false;
    ViewBag.StepChangeMeasurements = JsonConvert.SerializeObject(dataContext.Connection.RetrieveData(@"
        SELECT 
	        StepChangeMeasurement.ID,
	        Name
        FROM 
	        StepChangeMeasurement JOIN
	        PQMeasurement ON StepChangeMeasurement.PQMeasurementID = PQMeasurement.ID
    "));

#if DEBUG
    bool debug = true;
#else
    bool debug = false;
#endif


}
<script>
    var stepChangeMeasurements = @Raw(ViewBag.StepChangeMeasurements);
</script>
@section StyleSheets {
    <style>
        .vertical-menu {
            width: 250px; /* Set a width if you like */
            height: inherit;
            background-color: #eee; /* Grey background color */
            position: relative;
            float: left;
            padding: 10px;
        }

        .vertical-menu a {
            background-color: #eee; /* Grey background color */
            color: black; /* Black text color */
            display: block; /* Make the links appear below each other */
            padding: 12px; /* Add some padding */
            text-decoration: none; /* Remove underline from links */
        }

        .vertical-menu a:hover {
            background-color: #ccc; /* Dark grey background on mouse-over */
        }

        .vertical-menu a.active {
            background-color: #4CAF50; /* Add a green color to the "active/current" link */
            color: white;
        }

        body {
            overflow-y: hidden;
        }

        :focus {
            outline: none;
        }
    </style>
}

@if (debug)
{
    <script src="@Url.Content("~/@GSF/Web/Shared/Scripts/react.development.js")"></script>
    <script src="@Url.Content("~/@GSF/Web/Shared/Scripts/react-dom.development.js")"></script> 
}
else
{
    <script src="@Url.Content("~/@GSF/Web/Shared/Scripts/react.production.min.js")"></script>
    <script src="@Url.Content("~/@GSF/Web/Shared/Scripts/react-dom.production.min.js")"></script>
}

<script type="text/javascript" src="~/Scripts/StepChangeWebReport.js"></script>
@section Scripts{
    <script>
        $('#selectedText').hide()
        $('#globalFilter').hide()
    </script>
}
